{
  "extends": [
    "airbnb",
    "plugin:jsx-a11y/recommended",
    "plugin:testing-library/react",
    "plugin:jest-dom/recommended"
  ],
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "requireConfigFile": false
  },
  "settings": {
    "import/resolver": {
      "node": {
        "paths": ["src"],
        "extensions": [".js", ".jsx", ".ts", ".tsx"]
      }
    }
  },
  "plugins": ["jsx-a11y", "react-hooks", "testing-library", "jest-dom", "@typescript-eslint"],
  "env": {
    "amd": true,
    "browser": true,
    "node": true,
    "es6": true,
    "worker": true,
    "jest": true
  },
  "overrides": [
    {
      "files": ["**/*.ts?(x)"],
      "parser": "@typescript-eslint/parser",
      "extends": [
        "plugin:@typescript-eslint/eslint-recommended",
        "plugin:@typescript-eslint/recommended",
        "prettier"
      ],
      "plugins": ["prettier"],
      "rules": {
        "@typescript-eslint/no-empty-interface": "off",
        "@typescript-eslint/ban-ts-comment": "off",
        "no-use-before-define": "off",
        "@typescript-eslint/no-use-before-define": ["error"],
        "@typescript-eslint/no-explicit-any": "off",
        "react/prop-types": "off",
        "prettier/prettier": [
          "error",
          {
            "endOfLine": "auto"
          }
        ]
      }
    }
  ],
  "rules": {
    "no-restricted-imports": [
      "error",
      {
        "name": "lodash",
        "message": "Please use import single method from lodash"
      }
    ],
    "comma-dangle": [
      "error",
      {
        "arrays": "always-multiline",
        "objects": "always-multiline",
        "imports": "always-multiline",
        "exports": "always-multiline",
        "functions": "always-multiline"
      }
    ],
    "linebreak-style": ["error", "windows"],
    "template-curly-spacing": "off",
    "indent": [
      "error",
      2,
      {
        "SwitchCase": 1,
        "ignoredNodes": ["TemplateLiteral"]
      }
    ],
    "react/react-in-jsx-scope": "off",
    "import/prefer-default-export": "off",
    "import/no-extraneous-dependencies": 0,
    "import/order": [
      "error",
      {
        "groups": [["builtin", "external"], "internal", ["parent", "sibling", "index"]],
        "newlines-between": "always"
      }
    ],
    "no-param-reassign": "off",
    "no-shadow": "off",
    "no-console": "off",
    "no-plusplus": ["error", { "allowForLoopAfterthoughts": true }],
    "import/no-unresolved": [2, { "caseSensitive": false }],
    "no-return-assign": ["error", "except-parens"],
    "no-use-before-define": ["error", { "functions": false, "classes": true }],
    "jsx-quotes": ["error", "prefer-single"],
    "arrow-body-style": "off",
    "prefer-arrow-callback": "off",
    "react/jsx-indent": ["error", 2],
    "react/jsx-indent-props": ["error", 2],
    "react/jsx-props-no-spreading": 0,
    "react/state-in-constructor": 0,
    "react/button-has-type": 0,
    "react/prop-types": 2,
    "no-underscore-dangle": 0,
    "no-multiple-empty-lines": ["error", { "max": 1, "maxEOF": 1 }],
    "camelcase": 0,
    "import/extensions": [
      "error",
      "ignorePackages",
      {
        "js": "never",
        "jsx": "never",
        "ts": "never",
        "tsx": "never"
      }
    ],
    "react/jsx-filename-extension": [1, { "extensions": [".js", ".jsx", ".ts", ".tsx"] }],
    "react/destructuring-assignment": ["off", { "ignoreClassFields": true }],
    "react/forbid-prop-types": 0,
    "react-hooks/rules-of-hooks": "error", // Checks rules of Hooks
    "react-hooks/exhaustive-deps": "warn", // Checks effect dependencies
    "testing-library/await-async-query": "error",
    "testing-library/no-await-sync-query": "error",
    "testing-library/no-debugging-utils": "warn",
    "jest-dom/prefer-checked": "error",
    "jest-dom/prefer-enabled-disabled": "error",
    "jest-dom/prefer-required": "error",
    "jest-dom/prefer-to-have-attribute": "error",
    "react/function-component-definition": "off",
    "react/no-unescaped-entities": "off",
    "no-restricted-exports": "off",
    "react/require-default-props": "off",
    "class-methods-use-this": "off",
    "react/no-danger": [0],
    "jsx-a11y/anchor-is-valid": 1,
    "jsx-a11y/label-has-for": "off",
    "jsx-a11y/label-has-associated-control": "off",
    "padding-line-between-statements": [
      "error",
      { "blankLine": "always", "prev": "*", "next": "return" },
      { "blankLine": "always", "prev": ["const", "let", "var"], "next": "*" },
      { "blankLine": "any", "prev": ["const", "let", "var"], "next": ["const", "let", "var"] },
      { "blankLine": "always", "prev": ["if"], "next": "*" }
    ],
    "@typescript-eslint/no-inferrable-types": "off",
    "react/jsx-no-useless-fragment": "off"
  }
}
